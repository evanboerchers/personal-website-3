---
layout: blog
title: 'Simplify Svelte Site Content with MDSVEX'
description: 'How to leverage MDSVEX as a markdown renderer. Streamline how you write content for your website.'
date: 2025-07-14
tags:
    - 'tutorial'
    - 'web development'
author: 'Evan Boerchers'
image: '/images/blog/001.webp'
publish: true
---

Lets face it when it comes to writing content for the web, whether it be a blog, technical documentation or any other text based document, using html is a pain. The syntax is tedious and frankly just is not meant for writing large text articles. 

Wouldnt it be nice to be write content for our website in a language better suited for text documents? Personally I adore Markdown, it has simple readable syntax while still being feature rich. Being able to write content for our Svelte site with markdown would greatly improve our quality of life.

In comes MDSVEX! Not only can we write and render content using markdown but we can also integrate seamlessly with svelte to render out components and other svelte code in the same document.

## Setup

SvelteKit apps can be bootstraped to include MDSVEX out of the box using the SvelteKit CLI. If this is not the case for your app, setup is simple. With mdsvex installed (`npm install --save-dev mdsvex`), add mdsvex as a preproccessor step and include `.svx` and/or `.md` file extendions. This can be one through the `svelte.config.cjs` file which should look something like:

```js
import { mdsvex } from 'mdsvex';
import adapter from '@sveltejs/adapter-auto';
import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';

/** @type {import('@sveltejs/kit').Config} */
const config = {
	preprocess: [vitePreprocess(), mdsvex()],
	kit: {
		adapter: adapter()
	},
	extensions: ['.svelte', '.svx', '.md']
};

export default config;

```

## Frontmatter

Often times we will want our documents to contain metadata. This could be used to render addtional content or to provide associated data to be used in document searching or SEO. Mdsvex simplifies 

Define frontmatter at the start of your document:

```markdown
---
title: My Awesome Article
date: 2025-07-14
publish: true
---

```

The frontmatter data will automatically become available when importing your document.

## Using Layouts

Another fantastic mdsvex feature is layouts. Instead of having to write 

For instance, in our example we are rendering out content for our blog. Every blog article will follow a consistend format. Instead of having to write out the commonalities in every blog document we can instead define a common layout to be used when rendering everyblog article.

## Apply Typography 

## Using Components

## Syntax Highlighting

## Conclusion

Obviously there is more work that can be done to create an effectice content system for your website, but I hope this tutorial has unlocked the potential of mdsvex in your Svelte applications.